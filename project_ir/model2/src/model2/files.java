/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package model2;

import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static model2.Model2.getPosting;
import static model2.Model2.notreapet;
import static model2.Model2.notreapetWordsDocument;
import static model2.Model2.queryResult;
import static model2.Model2.readFile;
import static model2.Model2.token;
import static model2.Model2.write_file;

/**
 *
 * @author ahmed khaled
 */
public class files extends JFrame implements ActionListener {
     public static String names [] = new String[4]; 
     public static String names1 [] = new String[4];
     public static HashMap<String, ArrayList<Integer>> tokensWDocsId = new HashMap<String, ArrayList<Integer>>();



    /**
     * Creates new form New
     */
    public files() 
    {
        this.setTitle("Files Configuration");
        this.setSize(350,350);
        this.setLayout(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
 void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Files Name");

        jLabel2.setText("content of files");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);
        
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) 
            {
                try {
                    jButton1ActionPerformed(evt);
                } catch (IOException ex) {
                    Logger.getLogger(files.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });

        jButton2.setText("Save Files");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) 
            {
                jButton2ActionPerformed(evt);
                
            }
        });

        jButton1.setText("Next");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                        .addGap(236, 236, 236)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 334, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jButton2)
                .addGap(134, 134, 134)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>                        

 void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

 void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

 void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

 void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           
void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException 
{
     String docsName[] = new String[4];
        ArrayList<String> wordslist[] = new ArrayList[4];
   this.setVisible(false);
  
   
  
   docsName[0] = jTextField1.getText();
   docsName[1] = jTextField2.getText();
   docsName[2] = jTextField3.getText();
   docsName[3] = jTextField4.getText();
   if(docsName[0].isEmpty()){
      if(docsName[1].isEmpty()){
           if(docsName[2].isEmpty()){
               if(docsName[3].isEmpty()){
                   JOptionPane.showMessageDialog(this, "you should enter name  of file one");
   System.out.println("you should enter name and contnent of file one");
   this.setVisible(true);
           }
           }
      }
  }
   
  else{
   this.setVisible(false);
   tokens q=new tokens();
   q.setVisible(true);
  /*for (int i = 0; i < 4; i++) {
            wordslist[i] = new ArrayList<String>();
            wordslist[i] = notreapet(token(readFile(docsName[i])));
                  q.l.setText(docsName[i]); 
                  q.l.setText(wordslist[i].toString()) ;
        }*/
  names1 = docsName;
  /****************************************************************************/
  
   
      /*  start st = new start();
        st.setVisible(true);*/
       Scanner sc = new Scanner(System.in);
        String doc = new String();
        String query = new String();
        String file = new String();
        
        for (int i = 0; i < 4; i++) {
            wordslist[i] = new ArrayList<String>();
            wordslist[i] = notreapet(token(readFile(docsName[i])));
            System.out.println(docsName[i] + wordslist[i] + "\n");
        }
       
        ArrayList<String> docs = notreapetWordsDocument(wordslist[0], wordslist[1], wordslist[2], wordslist[3]);
        Collections.sort(docs);
        ArrayList<Integer> Posting = new ArrayList<Integer>();
        HashMap<String, ArrayList<Integer>> tokensWDocsId = new HashMap<String, ArrayList<Integer>>();
        for (int i = 0; i < docs.size(); i++) {
            Posting = getPosting(docs.get(i), wordslist);
            System.out.println(docs.get(i) + " " + Posting);
            tokensWDocsId.put(docs.get(i), Posting);
        }
        this.tokensWDocsId = tokensWDocsId;
        /*System.out.println("Enter Query : ");
        query = sc.nextLine();
        ArrayList<ArrayList<Integer>> result = queryResult(query,tokensWDocsId);
        
        System.out.println(result);*/
        
    /*********************************************************************************/    
    
    /*Label label [] = new Label[4];
    int Height = 10;
    ArrayList<String>[] wordslist1 = null;
    for (int i = 0; i < 4; i++) {
        wordslist1[i] = new ArrayList<String>();
        wordslist1[i] = notreapet(token(readFile(docsName[i])));
        //System.out.println(docsName[i] + wordslist[i] + "\n");
        label [i]= new Label(docsName[i] + wordslist1[i]) ;
        label [i].setBounds(10, Height+45, 120, 40);
        q.add(label [i]);
        Height +=40;
    }*/
    /********************************************************************************/
   
   
   }
}

 void jButton2ActionPerformed(java.awt.event.ActionEvent evt)
 {
     
     
   String name1;
  String content1;
   String name2;
  String content2;
   String name3;
  String content3;
   String name4;
  String content4;
  
    
  name1 =  jTextField1.getText();
  
    name2 =  jTextField2.getText();
    name3 =  jTextField3.getText();
    name4 =  jTextField4.getText();
  content1 = jTextArea1.getText();
  content2 = jTextArea2.getText();
  content3 = jTextArea3.getText();
  content4 = jTextArea4.getText();
  if(name1.equals("")  && content2.equals("")){
      if(name2.equals("")  && content1.equals("")){
           if(name3.equals("")  && content3.equals("")){
               if(name4.equals("")  && content4.equals("")){
                   JOptionPane.showMessageDialog(this, "you should enter name and contnent of file one");
   System.out.println("you should enter name and contnent of file one");
           }
           }
      }
  }
   
  else{
      write_file(name1,content2);
      write_file(name2,content1);
      write_file(name3,content3);
      write_file(name4,content4);
 
  }
  
 
  
  }
         
 

    /**
     * @param args the command line arguments
     */
    public static void write_file(String file_name , String doc){
    
        Scanner sc = new Scanner(System.in);
        BufferedWriter bw;
        try {
            bw = new BufferedWriter(new FileWriter(file_name+".txt"));
            bw.write(doc);
            bw.close();            
        } catch (IOException ex) {
            Logger.getLogger(files.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static String readFile(String name) throws FileNotFoundException, IOException {
        String everything = null;
        BufferedReader br = null;
        String line = null;
        br = new BufferedReader(new FileReader(name + ".txt"));
        StringBuilder sb = new StringBuilder();
        line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append(System.lineSeparator());
            line = br.readLine();
        }

        everything = sb.toString();
        br.close();
        //br.close();
        return everything;
    }
public static ArrayList<String> token(String document) {
        String words[];
        ArrayList<String> word = new ArrayList<String>();
        String[] lines = document.split(System.lineSeparator());

        for (int i = 0; i < lines.length; i++) {
            words = lines[i].split(" ");
            for (int j = 0; j < words.length; j++) {
                word.add(words[j]);
            }

        }
        return word;
    }
 public static ArrayList<String> notreapet(ArrayList<String> wordsFile) {
  
        String[] stopWords = {"!","@","#","$","%","^","&","*","(",")","_","+","=","-","÷","×","?","[","]","{","}","\"","|","||",";",":"};
        ArrayList<String> listword = new ArrayList<String>();
        for (String word : wordsFile) {
            if (!listword.contains(word)) {
                listword.add(word);
            }
        }
        for (int i = 0; i < stopWords.length; i++) {
            listword.remove(stopWords[i]);
        }

        return listword;
    }


    // Variables declaration - do not modify                     
 javax.swing.JButton jButton1;
 javax.swing.JButton jButton2;
 javax.swing.JLabel jLabel1;
 javax.swing.JLabel jLabel2;
 javax.swing.JScrollPane jScrollPane1;
 javax.swing.JScrollPane jScrollPane2;
 javax.swing.JScrollPane jScrollPane3;
 javax.swing.JScrollPane jScrollPane4;
 javax.swing.JTextArea jTextArea1;
 javax.swing.JTextArea jTextArea2;
 javax.swing.JTextArea jTextArea3;
 javax.swing.JTextArea jTextArea4;
 javax.swing.JTextField jTextField1;
 javax.swing.JTextField jTextField2;
 javax.swing.JTextField jTextField3;
 javax.swing.JTextField jTextField4;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}


